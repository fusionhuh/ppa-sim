$date
	Mon May  8 02:23:48 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$scope module test $end
$var wire 1 ! cin $end
$var wire 1 " cout $end
$var wire 1 # g_out $end
$var wire 1 $ p_out $end
$var wire 16 % x1 [15:0] $end
$var wire 16 & x2 [15:0] $end
$var wire 16 ' s [15:0] $end
$scope module adder $end
$var wire 1 ! cin $end
$var wire 1 " cout $end
$var wire 16 ( x1 [15:0] $end
$var wire 16 ) x2 [15:0] $end
$var wire 16 * s [15:0] $end
$var wire 1 + p_out $end
$var wire 16 , p_in [15:0] $end
$var wire 1 - g_out $end
$var wire 16 . g_in [15:0] $end
$var wire 4 / cla_cout [3:0] $end
$var wire 1 0 adder3_p_out $end
$var wire 1 1 adder3_g_out $end
$var wire 1 2 adder3_cin $end
$var wire 1 3 adder2_p_out $end
$var wire 1 4 adder2_g_out $end
$var wire 1 5 adder2_cin $end
$var wire 1 6 adder1_p_out $end
$var wire 1 7 adder1_g_out $end
$var wire 1 8 adder1_cin $end
$var wire 1 9 adder0_p_out $end
$var wire 1 : adder0_g_out $end
$var wire 1 ; adder0_cin $end
$scope module adder0 $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 4 = g_out [3:0] $end
$var wire 4 > p_in [3:0] $end
$var wire 4 ? p_out [3:0] $end
$var wire 4 @ x1 [3:0] $end
$var wire 4 A x2 [3:0] $end
$var wire 4 B s [3:0] $end
$var wire 1 C node_level2_pos3_outp $end
$var wire 1 D node_level2_pos3_outg $end
$var wire 1 E node_level2_pos2_outp $end
$var wire 1 F node_level2_pos2_outg $end
$var wire 1 G node_level1_pos3_outp $end
$var wire 1 H node_level1_pos3_outg $end
$var wire 1 I node_level1_pos1_outp $end
$var wire 1 J node_level1_pos1_outg $end
$var wire 4 K g_in [3:0] $end
$scope module node_level1_pos1 $end
$var wire 1 L g0 $end
$var wire 1 M g1 $end
$var wire 1 J gp $end
$var wire 1 N p0 $end
$var wire 1 O p1 $end
$var wire 1 I pp $end
$upscope $end
$scope module node_level1_pos3 $end
$var wire 1 P g0 $end
$var wire 1 Q g1 $end
$var wire 1 H gp $end
$var wire 1 R p0 $end
$var wire 1 S p1 $end
$var wire 1 G pp $end
$upscope $end
$scope module node_level2_pos2 $end
$var wire 1 J g0 $end
$var wire 1 T g1 $end
$var wire 1 F gp $end
$var wire 1 I p0 $end
$var wire 1 U p1 $end
$var wire 1 E pp $end
$upscope $end
$scope module node_level2_pos3 $end
$var wire 1 J g0 $end
$var wire 1 H g1 $end
$var wire 1 D gp $end
$var wire 1 I p0 $end
$var wire 1 G p1 $end
$var wire 1 C pp $end
$upscope $end
$upscope $end
$scope module adder1 $end
$var wire 1 8 cin $end
$var wire 1 V cout $end
$var wire 4 W g_out [3:0] $end
$var wire 4 X p_in [3:0] $end
$var wire 4 Y p_out [3:0] $end
$var wire 4 Z x1 [3:0] $end
$var wire 4 [ x2 [3:0] $end
$var wire 4 \ s [3:0] $end
$var wire 1 ] node_level2_pos3_outp $end
$var wire 1 ^ node_level2_pos3_outg $end
$var wire 1 _ node_level2_pos2_outp $end
$var wire 1 ` node_level2_pos2_outg $end
$var wire 1 a node_level1_pos3_outp $end
$var wire 1 b node_level1_pos3_outg $end
$var wire 1 c node_level1_pos1_outp $end
$var wire 1 d node_level1_pos1_outg $end
$var wire 4 e g_in [3:0] $end
$scope module node_level1_pos1 $end
$var wire 1 f g0 $end
$var wire 1 g g1 $end
$var wire 1 d gp $end
$var wire 1 h p0 $end
$var wire 1 i p1 $end
$var wire 1 c pp $end
$upscope $end
$scope module node_level1_pos3 $end
$var wire 1 j g0 $end
$var wire 1 k g1 $end
$var wire 1 b gp $end
$var wire 1 l p0 $end
$var wire 1 m p1 $end
$var wire 1 a pp $end
$upscope $end
$scope module node_level2_pos2 $end
$var wire 1 d g0 $end
$var wire 1 n g1 $end
$var wire 1 ` gp $end
$var wire 1 c p0 $end
$var wire 1 o p1 $end
$var wire 1 _ pp $end
$upscope $end
$scope module node_level2_pos3 $end
$var wire 1 d g0 $end
$var wire 1 b g1 $end
$var wire 1 ^ gp $end
$var wire 1 c p0 $end
$var wire 1 a p1 $end
$var wire 1 ] pp $end
$upscope $end
$upscope $end
$scope module adder2 $end
$var wire 1 5 cin $end
$var wire 1 p cout $end
$var wire 4 q g_out [3:0] $end
$var wire 4 r p_in [3:0] $end
$var wire 4 s p_out [3:0] $end
$var wire 4 t x1 [3:0] $end
$var wire 4 u x2 [3:0] $end
$var wire 4 v s [3:0] $end
$var wire 1 w node_level2_pos3_outp $end
$var wire 1 x node_level2_pos3_outg $end
$var wire 1 y node_level2_pos2_outp $end
$var wire 1 z node_level2_pos2_outg $end
$var wire 1 { node_level1_pos3_outp $end
$var wire 1 | node_level1_pos3_outg $end
$var wire 1 } node_level1_pos1_outp $end
$var wire 1 ~ node_level1_pos1_outg $end
$var wire 4 !" g_in [3:0] $end
$scope module node_level1_pos1 $end
$var wire 1 "" g0 $end
$var wire 1 #" g1 $end
$var wire 1 ~ gp $end
$var wire 1 $" p0 $end
$var wire 1 %" p1 $end
$var wire 1 } pp $end
$upscope $end
$scope module node_level1_pos3 $end
$var wire 1 &" g0 $end
$var wire 1 '" g1 $end
$var wire 1 | gp $end
$var wire 1 (" p0 $end
$var wire 1 )" p1 $end
$var wire 1 { pp $end
$upscope $end
$scope module node_level2_pos2 $end
$var wire 1 ~ g0 $end
$var wire 1 *" g1 $end
$var wire 1 z gp $end
$var wire 1 } p0 $end
$var wire 1 +" p1 $end
$var wire 1 y pp $end
$upscope $end
$scope module node_level2_pos3 $end
$var wire 1 ~ g0 $end
$var wire 1 | g1 $end
$var wire 1 x gp $end
$var wire 1 } p0 $end
$var wire 1 { p1 $end
$var wire 1 w pp $end
$upscope $end
$upscope $end
$scope module adder3 $end
$var wire 1 2 cin $end
$var wire 1 ," cout $end
$var wire 4 -" g_out [3:0] $end
$var wire 4 ." p_in [3:0] $end
$var wire 4 /" p_out [3:0] $end
$var wire 4 0" x1 [3:0] $end
$var wire 4 1" x2 [3:0] $end
$var wire 4 2" s [3:0] $end
$var wire 1 3" node_level2_pos3_outp $end
$var wire 1 4" node_level2_pos3_outg $end
$var wire 1 5" node_level2_pos2_outp $end
$var wire 1 6" node_level2_pos2_outg $end
$var wire 1 7" node_level1_pos3_outp $end
$var wire 1 8" node_level1_pos3_outg $end
$var wire 1 9" node_level1_pos1_outp $end
$var wire 1 :" node_level1_pos1_outg $end
$var wire 4 ;" g_in [3:0] $end
$scope module node_level1_pos1 $end
$var wire 1 <" g0 $end
$var wire 1 =" g1 $end
$var wire 1 :" gp $end
$var wire 1 >" p0 $end
$var wire 1 ?" p1 $end
$var wire 1 9" pp $end
$upscope $end
$scope module node_level1_pos3 $end
$var wire 1 @" g0 $end
$var wire 1 A" g1 $end
$var wire 1 8" gp $end
$var wire 1 B" p0 $end
$var wire 1 C" p1 $end
$var wire 1 7" pp $end
$upscope $end
$scope module node_level2_pos2 $end
$var wire 1 :" g0 $end
$var wire 1 D" g1 $end
$var wire 1 6" gp $end
$var wire 1 9" p0 $end
$var wire 1 E" p1 $end
$var wire 1 5" pp $end
$upscope $end
$scope module node_level2_pos3 $end
$var wire 1 :" g0 $end
$var wire 1 8" g1 $end
$var wire 1 4" gp $end
$var wire 1 9" p0 $end
$var wire 1 7" p1 $end
$var wire 1 3" pp $end
$upscope $end
$upscope $end
$scope module block0 $end
$var wire 4 F" g_in [3:0] $end
$var wire 1 : g_out $end
$var wire 4 G" p_in [3:0] $end
$var wire 1 9 p_out $end
$upscope $end
$scope module block1 $end
$var wire 4 H" g_in [3:0] $end
$var wire 1 7 g_out $end
$var wire 4 I" p_in [3:0] $end
$var wire 1 6 p_out $end
$upscope $end
$scope module block2 $end
$var wire 4 J" g_in [3:0] $end
$var wire 1 4 g_out $end
$var wire 4 K" p_in [3:0] $end
$var wire 1 3 p_out $end
$upscope $end
$scope module block3 $end
$var wire 4 L" g_in [3:0] $end
$var wire 1 1 g_out $end
$var wire 4 M" p_in [3:0] $end
$var wire 1 0 p_out $end
$upscope $end
$scope module cla_block $end
$var wire 1 ! cin $end
$var wire 4 N" g_in [3:0] $end
$var wire 1 - g_out $end
$var wire 4 O" p_in [3:0] $end
$var wire 1 + p_out $end
$var wire 4 P" cout [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
bx ;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
bx !"
x~
x}
x|
x{
xz
xy
xx
xw
bx v
bx u
bx t
bx s
bx r
bx q
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
bx e
xd
xc
xb
xa
x`
x_
x^
x]
bx \
bx [
bx Z
bx Y
bx X
bx W
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
bx K
xJ
xI
xH
xG
xF
xE
xD
xC
bx B
bx A
bx @
bx ?
bx >
bx =
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
bx /
bx .
x-
bx ,
x+
bx *
bx )
bx (
bx '
bx &
bx %
z$
z#
z"
x!
$end
#100
1`
1<
0d
1f
1""
1F
1D
b1000 \
1p
1-
18
15
12
16"
0J
1:
1^
17
1x
b110 v
14"
11
0:"
19
1E
1C
1_
0]
b1111 N"
14
0w
1z
0+
05"
03"
1L
1H
0b
03
0y
0~
0|
08"
b1001 2"
0I
0G
1T
06
0c
1a
1n
1}
1{
0*"
b1 O"
00
19"
17"
1D"
1<"
0U
b1001011010000000 '
b1001011010000000 *
b0 B
0M
0Q
0P
b1 F"
0o
0g
1k
0j
b1001 H"
1V
1+"
1#"
0'"
1&"
b111 J"
0E"
0="
1A"
0@"
b1001 L"
1,"
b1111 G"
1O
1N
1S
1R
b1 =
b1 K
b111 I"
1i
1h
0m
1l
b1001 W
b1001 e
b1001 K"
0%"
1$"
1)"
0("
b111 q
b111 !"
b110 M"
1?"
0>"
0C"
1B"
b1001011110010001 .
b1001 -"
b1001 ;"
b1111 ?
b1111 >
b111 Y
b111 X
b1001 s
b1001 r
b110100101111111 ,
b110 /"
b110 ."
1;
b1111 A
b1111 [
b1111 u
b1111 1"
b0 @
b1000 Z
b110 t
b1001 0"
b1111 /
b1111 P"
1!
b1111111111111111 &
b1111111111111111 )
b1001011010000000 %
b1001011010000000 (
#200
